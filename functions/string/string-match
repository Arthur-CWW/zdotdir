# https://fishshell.com/docs/current/cmds/string-match.html
# string-match [(-a | --all)] [(-e | --entire)] [(-i | --ignore-case)] [(-r | --regex)] [(-n | --index)] [(-q | --quiet)] [(-v | --invert)] PATTERN [STRING...]

local o_help o_all o_entire o_ignore_case o_regex o_index o_quiet o_invert
local is_match

zmodload zsh/zutil
zmodload zsh/pcre

zparseopts -D -F -K -- \
    {h,-help}=o_help \
    {a,-all}=o_all \
    {e,-entire}=o_entire \
    {i,-ignore-case}=o_ignore_case \
    {r,-regex}=o_regex \
    {n,-index}=o_index \
    {q,-quiet}=o_quiet \
    {v,-invert}=o_invert

pattern=$1; shift
if (( $#o_ignore_case )); then
  pcre_compile -smx -i $pattern || return 1
else
  pcre_compile -smx $pattern || return 1
fi

local results=()
local str idx len
for str in $@; do
  # match with a regex
  pcre_match -b -- $str
  [[ $? -eq 0 ]] && is_match=true || is_match=false

  if (( $#o_invert )); then
    # handle inverted results (non-matches)
    if [[ $is_match = false ]]; then
      if (( $#o_index )); then
        len="${#str}"
        results+="0 $len"
      else
        results+=$str
      fi
    fi
  else
    # handle matches
    while [[ $is_match = true ]] do
      idx=($=ZPCRE_OP)
      if (( $#o_entire )); then
        results+=$str
      elif (( $#o_index )); then
        (( len = idx[2] - idx[1] ))
        results+="$idx[1] $len"
      else
        results+=$MATCH
      fi
      (( $#o_all )) || break
      pcre_match -b -n $idx[2] -- $str
      [[ $? -eq 0 ]] && is_match=true || is_match=false
    done
  fi
done

if ! (( $#o_quiet )); then
  print -l $results
fi
[[ $#results -eq 0 ]] && return 1 || return 0
